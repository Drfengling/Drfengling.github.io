<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浅梦博客</title>
  
  
  <link href="https://drfengling.github.io/atom.xml" rel="self"/>
  
  <link href="https://drfengling.github.io/"/>
  <updated>2022-05-03T09:28:07.522Z</updated>
  <id>https://drfengling.github.io/</id>
  
  <author>
    <name>浅梦风凌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C#WCF方向(一)</title>
    <link href="https://drfengling.github.io/qm/e08ab1e4.html"/>
    <id>https://drfengling.github.io/qm/e08ab1e4.html</id>
    <published>2022-05-03T05:55:35.000Z</published>
    <updated>2022-05-03T09:28:07.522Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="什么是WCF"><a href="#什么是WCF" class="headerlink" title="什么是WCF"></a>什么是WCF</h3><p>摘要<br>WCF（Windows Communication Foundation）是由微软发展的一组数据通信的应用程序开发接口，可以翻译为Windows通讯接口，它是.NET框架的一部分。由 .NET Framework 3.0 开始引入。WCF的最终目标是通过进程或不同的系统、通过本地网络或是通过Internet收发客户和服务之间的消息。关于WCF的理论知识，需要我们了解的是经典的ABC。(Binding,Address,Contract)</p><span id="more"></span><p>简述<br>1.WCF全称Windows Communication Foundation<br>2.是Miscrosoft为构建面向服务的应用提供的分布式通信编程框架<br>3.是.Net Framework的重要组成部分.<br>4.WCF4.0<br>历史 ASMX WSE WCF3.0 WCF3.5 WCF4.0 WCFN.0</p><h3 id="集成微软分布式技术"><a href="#集成微软分布式技术" class="headerlink" title="集成微软分布式技术"></a>集成微软分布式技术</h3><p>WCF:WSE. MSMQ.  Enterprise Service COM+ .NET Remoting ASP.NET Web Service</p><h3 id="托管方式多样化"><a href="#托管方式多样化" class="headerlink" title="托管方式多样化"></a>托管方式多样化</h3><p>托管(Host)<br>IIS EXE Winform wpf Window Service  NT Service COM+</p><h3 id="统一编程模型"><a href="#统一编程模型" class="headerlink" title="统一编程模型"></a>统一编程模型</h3><p>Client Talk to  (Binding,Address,Contract)<br>1.Address: 每一个WCF的Service都有一个唯一的地址。这个地址给出了Service的地址和传输协议(Transport Protocol)。<br>2.Binding:绑定制定了服务通过什么形式访问。只要类比传输协议, encoding (text, binary, etc) 以及 WS-* 协议，像transactional支持以及可信任的消息队列。<br>3.Contract:Contract描述了Service能提供的各种服务。Contract有四种，包括Service Contract, Data Contract, Fault Contract和Message Contract。</p><h3 id="WCF知识点"><a href="#WCF知识点" class="headerlink" title="WCF知识点"></a>WCF知识点</h3><p>1.契约 Contract<br>2.宿主 Host<br>3.绑定 Binding<br>4.事务 Transaction<br>5.消息队列 MSMQ<br>6.并发控制 Concurrency Control<br>7.错误处理 Error Handling<br>8.安全 Security<br>9.诊断与调试</p><h3 id="软件工程的发展历史"><a href="#软件工程的发展历史" class="headerlink" title="软件工程的发展历史"></a>软件工程的发展历史</h3><p>面向过程PO 面向对象OO 面向组件CO 面向服务SO</p><h3 id="SOA的特征"><a href="#SOA的特征" class="headerlink" title="SOA的特征"></a>SOA的特征</h3><p>1.Service Oriented Architecture<br>2.面向服务的架构<br>互操作 重用 松耦合</p><h3 id="Web服务类别"><a href="#Web服务类别" class="headerlink" title="Web服务类别"></a>Web服务类别</h3><p>SOAP REST<br>soap:简单对象访问协议<br>rest：轻量级WebApi服务</p><h3 id="Web服务使用的领域"><a href="#Web服务使用的领域" class="headerlink" title="Web服务使用的领域"></a>Web服务使用的领域</h3><p>开发中间产品 暴露接口服务 集成第三方系统</p><h3 id="应用系统中的Web服务"><a href="#应用系统中的Web服务" class="headerlink" title="应用系统中的Web服务"></a>应用系统中的Web服务</h3><p>表现层<br>服务层<br>业务逻辑层——&gt;  ESB企业服务总线   ——&gt;服务<br>数据访问层<br>数据 数据</p><h3 id="系统集成中的Web服务"><a href="#系统集成中的Web服务" class="headerlink" title="系统集成中的Web服务"></a>系统集成中的Web服务</h3><p>   电子商务网站订单系统<br>    |              |                |<br>银行服务 库存系统服务 短信服务</p><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>1.创建一个WCF服务程序 程序并调用<br>打开Visual Studio开发工具 我这里用的2022<br>左上角菜单 文件 点击新建 选择项目 打开了创建新项目的对话框 我们在搜索栏搜素wcf<br>搜索结果如下所示:<br><img src="/qm/e08ab1e4/1.jpg"><br>这里选择WCF服务应用程序<br><img src="/qm/e08ab1e4/2.jpg"><br>自定义下项目名 位置 这里选用.Net4.5.2框架 创建即可<br><img src="/qm/e08ab1e4/3.jpg"><br>创建完成后 默认会添加IService1.cs,Service1.svc文件,.svc扩展文件,它会做一些消息的路由工作,激活服务,会通过文件做一些处理.<br>IService1.cs<br>ServiceContract:服务契约<br>包含两个操作契约OperationContract：GetData,GetDataUsingDataContract 使用数据契约获取数据<br>DataContract:数据契约:<br>包含两个值 bool  StringValue<br>做下自定义更改<br>1.增加数据契约对象<br>我们在IService1.cs中创建一个类自定义命名我的如下新增一个用户数据对象,增加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[DataContract]//数据契约对象</span><br><span class="line">    public class UserData &#123; </span><br><span class="line">        [DataMember]</span><br><span class="line">        public string UserName &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">        [DataMember]</span><br><span class="line">        public string Email &#123; get; <span class="built_in">set</span>; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.增加服务契约接口<br>我们在IService1.cs中interface IService1中新增接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// TODO: 在此添加您的服务操作</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 自定义服务契约</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;user&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">        [OperationContract]///注意:增加操作契约标记</span><br><span class="line">        UserData GetUserData(UserData user);</span><br></pre></td></tr></table></figure><p>3.在Service1.svc中新增实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">///新增实现</span><br><span class="line">       public UserData GetUserData(UserData user) &#123;</span><br><span class="line">           <span class="built_in">return</span> user;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>到此，我们已完成了简单的数据服务实现契约,点击导航栏生成——&gt;重新生成解决方案,确认无报错后执行下一步<br>4.在浏览器中查看<br>点击Service1.svc右键选择在浏览器中查看<br>visual Studio打开浏览器,跳转服务界面.<br><img src="/qm/e08ab1e4/4.jpg"><br>出现这个界面,说明你的服务是正常的.可以发布了.我们看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svcutil.exe http://localhost:60217/Service1.svc?wsdl</span><br></pre></td></tr></table></figure><p>wsdl:服务描述语言,对外公布的服务语言,你想让别人引用你的服务的话,就可以引用这个.<br>我们可以看到下方有客户端调用示例.后面客户端调用服务可以仿照使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">C<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">class Test</span><br><span class="line">&#123;</span><br><span class="line">    static void <span class="function"><span class="title">Main</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        Service1Client client = new Service1Client();</span><br><span class="line"></span><br><span class="line">        // 使用 <span class="string">&quot;client&quot;</span> 变量在服务上调用操作。</span><br><span class="line"></span><br><span class="line">        // 始终关闭客户端。</span><br><span class="line">        client.Close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Visual Basic</span><br><span class="line"></span><br><span class="line">Class Test</span><br><span class="line">    Shared Sub Main()</span><br><span class="line">        Dim client As Service1Client = New Service1Client()</span><br><span class="line">        <span class="string">&#x27; 使用 &quot;client&quot; 变量在服务上调用操作。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#x27;</span> 始终关闭客户端。</span><br><span class="line">        client.Close()</span><br><span class="line">    End Sub</span><br><span class="line">End Class</span><br></pre></td></tr></table></figure><p>5.新增WPF项目<br>我们在解决方案下新增一个WPF项目<br>(也可以新增一个网站项目,Winform项目等)<br><img src="/qm/e08ab1e4/5.jpg"><br>自定义名字WCFClient创建.<br>6.引用服务<br>在创建好的wpf项目中选择引用,右键选择添加服务引用,打开如下:<br><img src="/qm/e08ab1e4/6.jpg"><br>我们输入步骤4在浏览器打开后生成的公共服务语言</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:60217/Service1.svc?wsdl</span><br></pre></td></tr></table></figure><p>自定义命名空间名称ServiceReference确定.<br>提示:我们也可以点击发现.发现解决方案中的服务.<br>服务栏会为我们找到对应服务.<br><img src="/qm/e08ab1e4/7.jpg"><br>点击Service1.svc打开到IService1,即可查看右侧列表显示的三个服务接口,两个默认的服务接口契约,<br>和一个我们新增的GetUserData服务契约.(如果没有显示新增的接口,请返回WCF项目检查是否遗漏契约标记)<br>点击添加后的服务引用可以查看<br><img src="/qm/e08ab1e4/8.jpg"><br>7.使用Wpf调用服务</p><ul><li>打开MainWindow新增Button按钮,可以打开工具栏拖动Button到界面上,或编写Xaml文本增加,完成后调整布局.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid HorizontalAlignment=<span class="string">&quot;Center&quot;</span> VerticalAlignment=<span class="string">&quot;Center&quot;</span>&gt;</span><br><span class="line">        &lt;Button</span><br><span class="line">            Width=<span class="string">&quot;100&quot;</span></span><br><span class="line">            Height=<span class="string">&quot;30&quot;</span></span><br><span class="line">            Content=<span class="string">&quot;调用服务&quot;</span> Click=<span class="string">&quot;Button_Click&quot;</span>/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br></pre></td></tr></table></figure></li><li>点击Click事件F12进入后置代码,这里不做复杂框架处理,后置编写点击实现Wcf服务调用<br>具体实现如下:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">        /// 调用WCF服务.</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;sender&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=<span class="string">&quot;e&quot;</span>&gt;&lt;/param&gt;</span><br><span class="line">        private void Button_Click(object sender, RoutedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Service1Client client = new Service1Client();</span><br><span class="line">            string result1 = client.GetData(1);</span><br><span class="line">            UserData userData = client.GetUserData(new <span class="function"><span class="title">UserData</span></span>() &#123; Email=<span class="string">&quot;Drfengling@163.com&quot;</span>,UserName=<span class="string">&quot;浅梦风凌&quot;</span>&#125;);</span><br><span class="line">            client.Close();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><p>8.生成调试服务</p><ul><li>点击导航栏生成 重新生成解决方案 确认无误后在点击事件处打断点调试</li><li>选择WCFClient为启动项目,点击导航栏调试开始调试,点击按钮调用服务,观察服务调用结果<br><img src="/qm/e08ab1e4/9.jpg"><br>可以看到我们在客户端完成了对服务端的调用,调用获取到了WCF服务结果.<br>快来动手试试搭建简单的服务调用吧.</li></ul><h3 id="WCF的新特性"><a href="#WCF的新特性" class="headerlink" title="WCF的新特性"></a>WCF的新特性</h3><p>WCF4.5新特性<br>1.支持契约优先(Contract First)的开发<br>2.Building发现配置错误<br>3.支持新异步流<br>4.?singleWSDL<br>5.Websockets支持在端口80和443<br>6.XML编辑器工具展示<br>7.ChannelFactory缓存支持<br>8.二进制编码器压缩支持<br>9.不管Fire and foget的UDP消息发交换模式<br>10.支持单个WCF终结点支持多个身份验证模式<br>11.支持WCF服务使用国际化域名（IDNs）</p><h3 id="WCF学习资源"><a href="#WCF学习资源" class="headerlink" title="WCF学习资源"></a>WCF学习资源</h3><p>1.最权威WCF书籍</p><ul><li>Programing WCF Service,(Juval Lowy)</li><li>《WCF服务编程》第三版</li><li>Inside WCF,(Justin Smith)</li><li>《WCF技术内幕》</li></ul><p>2.论坛</p><ul><li>微软WCF中文技术论坛</li><li>微软WCF英文技术论坛</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;什么是WCF&quot;&gt;&lt;a href=&quot;#什么是WCF&quot; class=&quot;headerlink&quot; title=&quot;什么是WCF&quot;&gt;&lt;/a&gt;什么是WCF&lt;/h3&gt;&lt;p&gt;摘要&lt;br&gt;WCF（Windows Communication Foundation）是由微软发展的一组数据通信的应用程序开发接口，可以翻译为Windows通讯接口，它是.NET框架的一部分。由 .NET Framework 3.0 开始引入。WCF的最终目标是通过进程或不同的系统、通过本地网络或是通过Internet收发客户和服务之间的消息。关于WCF的理论知识，需要我们了解的是经典的ABC。(Binding,Address,Contract)&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="WCF" scheme="https://drfengling.github.io/tags/WCF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客添加Gitalk评论</title>
    <link href="https://drfengling.github.io/qm/212a5789.html"/>
    <id>https://drfengling.github.io/qm/212a5789.html</id>
    <published>2022-04-27T03:09:16.000Z</published>
    <updated>2022-04-27T06:30:08.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。<br>更详细用法看官网<a href="https://github.com/gitalk/gitalk/blob/master/readme-cn.md">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a>这里只记录有诱惑的操作</p><span id="more"></span><h4 id="1-申请秘钥"><a href="#1-申请秘钥" class="headerlink" title="1.申请秘钥"></a>1.申请秘钥</h4><p>申请一个 OAuth application <a href="https://github.com/settings/applications/new">https://github.com/settings/applications/new</a><br><img src="https://gitee.com/lucas27/pic-bed/raw/master/picture/%E6%96%B0%E5%BB%BA%E5%BA%94%E7%94%A8.jpg"><br>获取 ID 和 secrets，必须要保存好，然后以后就看不到了，忘记了只能重建。<br>上面的填写成功之后进入,我们需要的是生成的Client ID 和Client Secret<br><img src="/qm/212a5789/1.jpg"></p><h4 id="2-存储仓库"><a href="#2-存储仓库" class="headerlink" title="2.存储仓库"></a>2.存储仓库</h4><p>您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论<br><img src="/qm/212a5789/2.jpg"><br>如上所示,我新建了一个dryunment用来存储线上评论.如果没有可以点New新建一个仓库</p><h4 id="3-博客配置"><a href="#3-博客配置" class="headerlink" title="3.博客配置"></a>3.博客配置</h4><p>上面的确认无误后，我们进行配置博客，引入gitalk。</p><p>  首先进入主题的配置文件_config.yml(注意是主题的配置文件，不是博客根目录下的配置文件)，添加gitalk配置(一定要仔细，缺一不可)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  owner: github用户名</span><br><span class="line">  admin: github用户名</span><br><span class="line">  repo: 博客的仓库名称(注意不是地址)</span><br><span class="line">  ClientID: 上面生成的Client ID</span><br><span class="line">  ClientSecret: 上面生成的Client Secret</span><br></pre></td></tr></table></figure><p>上面配置完之后,进入主题目录\themes\kratos-rebirth\layout_comments目录，在当前目录下新建一个gitalk.ejs文件，写入如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&lt;%- url_npm_cdn(&#x27;gitalk@1/dist/gitalk.css&#x27;) %&gt;&quot;</span>&gt;</span><br><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;gitalk-container&quot;</span> class=<span class="string">&quot;post-comments lazy-load&lt;% if (theme.posts.comments?.enableBGImage) &#123; %&gt; bg-image&lt;% &#125; %&gt;&quot;</span> style=<span class="string">&quot;padding-left:2rem; padding-right:2rem;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var load_comm = () =&gt; &#123;</span><br><span class="line">        const init = () =&gt; &#123;</span><br><span class="line">            console.log(<span class="string">&#x27;Gitalk loading...&#x27;</span>);</span><br><span class="line">            const gitalk = new Gitalk(Object.assign(&#123;</span><br><span class="line">                <span class="built_in">id</span>: <span class="string">&#x27;&lt;%- url_for(page.path) %&gt;&#x27;</span>,</span><br><span class="line">                path: <span class="string">&#x27;&lt;%- url_for(page.path) %&gt;&#x27;</span></span><br><span class="line">            &#125;, JSON.parse(<span class="string">&#x27;&lt;%- JSON.stringify(theme.gitalk) %&gt;&#x27;</span>)));</span><br><span class="line"></span><br><span class="line">            gitalk.render(<span class="string">&#x27;gitalk-container&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeof Gitalk === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">            const src = <span class="string">&#x27;&lt;%- url_npm_cdn(&quot;gitalk@1/dist/gitalk.min.js&quot;) %&gt;&#x27;</span>;</span><br><span class="line">            $.getScript(src, init);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            init();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">load_comm();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;noscript&gt;Please <span class="built_in">enable</span> JavaScript to view the &lt;a href=<span class="string">&quot;https://github.com/gitalk/gitalk&quot;</span>&gt;comments powered by Gitalk.&lt;/a&gt;&lt;/noscript&gt;</span><br></pre></td></tr></table></figure><h4 id="4-博客部署"><a href="#4-博客部署" class="headerlink" title="4.博客部署"></a>4.博客部署</h4><p>键入命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地部署完成后可以打开博客文章访问就可以看到文章下方加载除评论区了,选择账号登录就可以进行评论了.<br>确认无误hexo d部署到服务器上<br><a href="https://drfengling.github.io/">https://drfengling.github.io</a><br>由于研究了多种博客评论系统 所以你看到的评论系统不一定是Gitalk.有问题评论区欢迎评论交流.<br>到此,Gitalk评论系统就完成啦，快来动手试试吧.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。&lt;br&gt;更详细用法看官网&lt;a href=&quot;https://github.com/gitalk/gitalk/blob/master/readme-cn.md&quot;&gt;https://github.com/gitalk/gitalk/blob/master/readme-cn.md&lt;/a&gt;这里只记录有诱惑的操作&lt;/p&gt;</summary>
    
    
    
    <category term="线上评论" scheme="https://drfengling.github.io/categories/%E7%BA%BF%E4%B8%8A%E8%AF%84%E8%AE%BA/"/>
    
    
    <category term="Gitalk" scheme="https://drfengling.github.io/tags/Gitalk/"/>
    
  </entry>
  
  <entry>
    <title>livere评论系统</title>
    <link href="https://drfengling.github.io/qm/d318877c.html"/>
    <id>https://drfengling.github.io/qm/d318877c.html</id>
    <published>2022-04-27T01:21:11.000Z</published>
    <updated>2022-04-27T02:54:19.927Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Hexo博客添加LiveRe评论系统"><a href="#Hexo博客添加LiveRe评论系统" class="headerlink" title="Hexo博客添加LiveRe评论系统"></a>Hexo博客添加LiveRe评论系统</h3><p>好久不见,又是长长的探索实践之旅了,最近在新加评论系统出现了各种问题,也有所得.<br>评论系统可以说五花八门啦，用得多的比如：Gitment、Gitalk、LiveRe、Disqus、disqusjs，twikoo, waline、Valine 等</p><span id="more"></span><h5 id="这里以LiveRe为例"><a href="#这里以LiveRe为例" class="headerlink" title="这里以LiveRe为例:"></a>这里以LiveRe为例:</h5><p>1.进入来必力官网 <a href="https://www.livere.com/">https://www.livere.com/</a><br>2.右上角个人头像点进去 有账号可以直接登录<br>3.没有就注册一个<a href="https://was.livere.me/register?lang=zh-cn">https://was.livere.me/register?lang=zh-cn</a>,填写自己的邮箱,我这里用了网易163邮箱,可以根据自己情况填写,填写密码完成注册.<br>4.注册以后登录进去，点击导航栏安装,选择City版进行安装，City版是免费的，对我们这种个人博客而言完全足够了<br><img src="/qm/d318877c/1.jpg"><br>5.接下来需要填写一些关于你想将LiveRe用于的博客的一些信息<br>6.填完之后，申请获取代码，此时其将会给你一段代码，该段代码等下需要加到你的个人博客的页面中，我们可以先将其复制并保存起来。</p><h3 id="LiveRe评论配置集成"><a href="#LiveRe评论配置集成" class="headerlink" title="LiveRe评论配置集成"></a>LiveRe评论配置集成</h3><p>1.回到我们的博客根目录打开themes主题文件夹 我用的是kratos-rebirth主题,以kratos-rebirth为例:<br><img src="/qm/d318877c/2.jpg"><br>打开_config.yml文件更改配置<br><img src="/qm/d318877c/3.jpg"><br>我们更改Post Page 文章页配置posts下属性comments的属性取值<br>这里用到的评论系统是livere 对应更改provider: livere<br>enableBGImage用来配置背景图片<br>2.找到\kratos-rebirth\layout_comments文件夹 更改 livere.ejs文件配置 没有可以创建一个<br>3.打开livere文件,新增来必力评论代码如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&quot;lv-container&quot;</span> class=<span class="string">&quot;post-comments lazy-load &lt;% if (theme.posts.comments?.enableBGImage) &#123; %&gt; bg-image&lt;% &#125; %&gt;&quot;</span> data-id=<span class="string">&quot;&lt;%- theme.livere.id || &#x27;city&#x27; %&gt;&quot;</span> data-uid=<span class="string">&quot;&lt;%- theme.livere.uid %&gt;&quot;</span>&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">   (<span class="keyword">function</span>(d, s) &#123;</span><br><span class="line">       var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (typeof LivereTower === <span class="string">&#x27;function&#x27;</span>) &#123; <span class="built_in">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">       j = d.createElement(s);</span><br><span class="line">       j.src = <span class="string">&#x27;https://cdn-city.livere.com/js/embed.dist.js&#x27;</span>;</span><br><span class="line">       j.async = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">       e.parentNode.insertBefore(j, e);</span><br><span class="line">   &#125;)(document, <span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- City版安装代码已完成 --&gt;</span><br></pre></td></tr></table></figure><p>老样子,先来三杯小鸟伏特加 powershell或命令行打开博客根目录<br>键入命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地部署完成后可以打开博客文章访问就可以看到文章下方加载除评论区了,选择账号登录就可以进行评论了.<br>确认无误hexo d部署到服务器上<br><a href="https://drfengling.github.io/">https://drfengling.github.io</a><br>由于研究了多种博客评论系统 所以你看到的评论系统不一定是livere.有问题评论区欢迎评论交流.<br>到此,livere评论系统就完成啦，快来动手试试吧.</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Hexo博客添加LiveRe评论系统&quot;&gt;&lt;a href=&quot;#Hexo博客添加LiveRe评论系统&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客添加LiveRe评论系统&quot;&gt;&lt;/a&gt;Hexo博客添加LiveRe评论系统&lt;/h3&gt;&lt;p&gt;好久不见,又是长长的探索实践之旅了,最近在新加评论系统出现了各种问题,也有所得.&lt;br&gt;评论系统可以说五花八门啦，用得多的比如：Gitment、Gitalk、LiveRe、Disqus、disqusjs，twikoo, waline、Valine 等&lt;/p&gt;</summary>
    
    
    
    <category term="线上评论" scheme="https://drfengling.github.io/categories/%E7%BA%BF%E4%B8%8A%E8%AF%84%E8%AE%BA/"/>
    
    
    <category term="livere" scheme="https://drfengling.github.io/tags/livere/"/>
    
  </entry>
  
  <entry>
    <title>博客美化(一)</title>
    <link href="https://drfengling.github.io/qm/5f88ef60.html"/>
    <id>https://drfengling.github.io/qm/5f88ef60.html</id>
    <published>2022-04-16T06:03:16.000Z</published>
    <updated>2022-04-30T07:39:08.230Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><h5 id="1-添加鼠标点击爱心效果"><a href="#1-添加鼠标点击爱心效果" class="headerlink" title="1.添加鼠标点击爱心效果"></a>1.添加鼠标点击爱心效果</h5><p>在\themes\kratos-rebirth\source\js下新建文件love.js,输入以下内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span>(e,t,a)&#123;<span class="keyword">function</span> <span class="function"><span class="title">n</span></span>()&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="keyword">function</span> <span class="function"><span class="title">r</span></span>()&#123;<span class="keyword">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="keyword">function</span> <span class="function"><span class="title">o</span></span>()&#123;var t=<span class="string">&quot;function&quot;</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class="keyword">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="keyword">function</span> i(e)&#123;var a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class="keyword">function</span> c(e)&#123;var a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[0].appendChild(a)&#125;<span class="keyword">function</span> <span class="function"><span class="title">s</span></span>()&#123;<span class="built_in">return</span><span class="string">&quot;rgb(&quot;</span>+~~(255*Math.random())+<span class="string">&quot;,&quot;</span>+~~(255*Math.random())+<span class="string">&quot;,&quot;</span>+~~(255*Math.random())+<span class="string">&quot;)&quot;</span>&#125;var d=[];e.requestAnimationFrame=<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="keyword">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><p>在\themes\kratos-rebirth\layout\layout.ejs文章末尾加入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/love.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>完成!鼠标点击就可以看到小红心效果了</p><span id="more"></span><h5 id="2-添加鼠标点击烟花爆竹效果"><a href="#2-添加鼠标点击烟花爆竹效果" class="headerlink" title="2.添加鼠标点击烟花爆竹效果"></a>2.添加鼠标点击烟花爆竹效果</h5><p>在\themes\kratos-rebirth\source\js下新建文件fireworks.js,输入以下内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">&quot;linear&quot;</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=window.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!1)&#125;<span class="string">&quot;use strict&quot;</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">&quot;linear&quot;</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">&quot;easeOutExpo&quot;</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=window.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure><p>在\themes\kratos-rebirth\layout\layout.ejs文章末尾加入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击烟花爆竹效果 --&gt;</span><br><span class="line">&lt;canvas class=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; </span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>完成!鼠标点击就可以看到烟花爆竹了<br><img src="/qm/5f88ef60/2.jpg"></p><h5 id="3-浏览器网页标题恶搞"><a href="#3-浏览器网页标题恶搞" class="headerlink" title="3.浏览器网页标题恶搞"></a>3.浏览器网页标题恶搞</h5><p>当用户访问你的博客时点击到了其他网页，我们可以恶搞一下网页标题，呼唤用户回来，首先在目录 \themes\kratos-rebirth\source\js 下新建一个 FunnyTitle.js 文件，在里面填写如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 浏览器搞笑标题</span><br><span class="line">var OriginTitle = document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">document.addEventListener(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> (document.hidden) &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/images/favicon.ico&quot;</span>);</span><br><span class="line">        document.title = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/images/favicon.ico&quot;</span>);</span><br><span class="line">        document.title = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27;</span> + OriginTitle;</span><br><span class="line">        titleTime = setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">            document.title = OriginTitle;</span><br><span class="line">        &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其中 funny.ico 是用户切换到其他标签后你网站的图标，favicon.ico 是正常图标，然后在 \themes\kratos-rebirth\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--浏览器搞笑标题--&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/FunnyTitle.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="4-背景添加动态线条效果"><a href="#4-背景添加动态线条效果" class="headerlink" title="4.背景添加动态线条效果"></a>4.背景添加动态线条效果</h5><p>在 \themes\kratos-rebirth\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span></span><br><span class="line">color=<span class="string">&quot;220,220,220&quot;</span> opacity=<span class="string">&#x27;0.7&#x27;</span> zIndex=<span class="string">&quot;-2&quot;</span> count=<span class="string">&quot;200&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>其中：</p><p>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）<br>opacity：表示线条透明度（0~1），默认：0.5<br>count：表示线条的总数量，默认：150<br>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</p><h5 id="5-小宠物挂件-小仓鼠"><a href="#5-小宠物挂件-小仓鼠" class="headerlink" title="5.小宠物挂件(小仓鼠)"></a>5.小宠物挂件(小仓鼠)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe width=<span class="string">&quot;100%&quot;</span> height=<span class="string">&quot;300&quot;</span> frameborder=<span class="string">&quot;0&quot;</span> src=<span class="string">&quot;https://cdn.abowman.com/widgets/hamster/hamster.html?up_bgColor=425066&amp;up_bodyColor=C0C0C0&amp;up_earColor=C0C0C0&amp;up_snoutColor=FFFFFF&amp;up_eyeColor=392f41&amp;up_feetColor=FFFFFF&amp;up_tailColor=C0C0C0&amp;up_waterColor=87CEFA&amp;up_foodColor=cba920&amp;up_wheelColor=ffffff&amp;up_wheelOuterColor=ff4d4d&amp;up_wheelCenterColor=ffffff&amp;up_wheelSpokeColor=dedede&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><iframe width="100%" height="300" frameborder="0" src="https://cdn.abowman.com/widgets/hamster/hamster.html?up_bgColor=425066&up_bodyColor=C0C0C0&up_earColor=C0C0C0&up_snoutColor=FFFFFF&up_eyeColor=392f41&up_feetColor=FFFFFF&up_tailColor=C0C0C0&up_waterColor=87CEFA&up_foodColor=cba920&up_wheelColor=ffffff&up_wheelOuterColor=ff4d4d&up_wheelCenterColor=ffffff&up_wheelSpokeColor=dedede"></iframe><h5 id="6-天气预报"><a href="#6-天气预报" class="headerlink" title="6.天气预报"></a>6.天气预报</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe allowtransparency=<span class="string">&quot;true&quot;</span> frameborder=<span class="string">&quot;0&quot;</span> width=<span class="string">&quot;100%&quot;</span> height=<span class="string">&quot;200&quot;</span> scrolling=<span class="string">&quot;no&quot;</span> src=<span class="string">&quot;//tianqi.2345.com/plugin/widget/index.htm?s=2&amp;z=1&amp;t=1&amp;v=0&amp;d=5&amp;bd=1&amp;k=000000&amp;f=&amp;ltf=009944&amp;htf=cc0000&amp;q=1&amp;e=1&amp;a=1&amp;c=54511&amp;w=100%&amp;h=200&amp;align=center&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><iframe allowtransparency="true" frameborder="0" width="100%" height="200" scrolling="no" src="//tianqi.2345.com/plugin/widget/index.htm?s=2&z=1&t=1&v=0&d=5&bd=1&k=000000&f=&ltf=009944&htf=cc0000&q=1&e=1&a=1&c=54511&w=100%&h=200&align=center"></iframe>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;博客美化&quot;&gt;&lt;a href=&quot;#博客美化&quot; class=&quot;headerlink&quot; title=&quot;博客美化&quot;&gt;&lt;/a&gt;博客美化&lt;/h2&gt;&lt;h5 id=&quot;1-添加鼠标点击爱心效果&quot;&gt;&lt;a href=&quot;#1-添加鼠标点击爱心效果&quot; class=&quot;headerlink&quot; title=&quot;1.添加鼠标点击爱心效果&quot;&gt;&lt;/a&gt;1.添加鼠标点击爱心效果&lt;/h5&gt;&lt;p&gt;在\themes\kratos-rebirth\source\js下新建文件love.js,输入以下内容:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;!&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e,t,a)&amp;#123;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;n&lt;/span&gt;&lt;/span&gt;()&amp;#123;c(&lt;span class=&quot;string&quot;&gt;&amp;quot;.heart&amp;#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&amp;#125;.heart:after,.heart:before&amp;#123;content: &amp;#x27;&amp;#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&amp;#125;.heart:after&amp;#123;top: -5px;&amp;#125;.heart:before&amp;#123;left: -5px;&amp;#125;&amp;quot;&lt;/span&gt;),o(),r()&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;r&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(var e=0;e&amp;lt;d.length;e++)d[e].alpha&amp;lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&lt;span class=&quot;string&quot;&gt;&amp;quot;left:&amp;quot;&lt;/span&gt;+d[e].x+&lt;span class=&quot;string&quot;&gt;&amp;quot;px;top:&amp;quot;&lt;/span&gt;+d[e].y+&lt;span class=&quot;string&quot;&gt;&amp;quot;px;opacity:&amp;quot;&lt;/span&gt;+d[e].alpha+&lt;span class=&quot;string&quot;&gt;&amp;quot;;transform:scale(&amp;quot;&lt;/span&gt;+d[e].scale+&lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;+d[e].scale+&lt;span class=&quot;string&quot;&gt;&amp;quot;) rotate(45deg);background:&amp;quot;&lt;/span&gt;+d[e].color+&lt;span class=&quot;string&quot;&gt;&amp;quot;;z-index:99999&amp;quot;&lt;/span&gt;);requestAnimationFrame(r)&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;o&lt;/span&gt;&lt;/span&gt;()&amp;#123;var t=&lt;span class=&quot;string&quot;&gt;&amp;quot;function&amp;quot;&lt;/span&gt;==typeof e.onclick&amp;amp;&amp;amp;e.onclick;e.onclick=&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e)&amp;#123;t&amp;amp;&amp;amp;t(),i(e)&amp;#125;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; i(e)&amp;#123;var a=t.createElement(&lt;span class=&quot;string&quot;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;);a.className=&lt;span class=&quot;string&quot;&gt;&amp;quot;heart&amp;quot;&lt;/span&gt;,d.push(&amp;#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&amp;#125;),t.body.appendChild(a)&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; c(e)&amp;#123;var a=t.createElement(&lt;span class=&quot;string&quot;&gt;&amp;quot;style&amp;quot;&lt;/span&gt;);a.type=&lt;span class=&quot;string&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt;;try&amp;#123;a.appendChild(t.createTextNode(e))&amp;#125;catch(t)&amp;#123;a.styleSheet.cssText=e&amp;#125;t.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&amp;quot;head&amp;quot;&lt;/span&gt;)[0].appendChild(a)&amp;#125;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;s&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;rgb(&amp;quot;&lt;/span&gt;+~~(255*Math.random())+&lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;+~~(255*Math.random())+&lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;+~~(255*Math.random())+&lt;span class=&quot;string&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&amp;#125;var d=[];e.requestAnimationFrame=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(e)&amp;#123;setTimeout(e,1e3/60)&amp;#125;&amp;#125;(),n()&amp;#125;(window,document);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在\themes\kratos-rebirth\layout\layout.ejs文章末尾加入:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 页面点击小红心 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&amp;quot;/js/love.js&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完成!鼠标点击就可以看到小红心效果了&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="博客美化" scheme="https://drfengling.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(六)</title>
    <link href="https://drfengling.github.io/qm/31df0a78.html"/>
    <id>https://drfengling.github.io/qm/31df0a78.html</id>
    <published>2022-04-16T01:40:04.000Z</published>
    <updated>2022-04-19T06:39:00.329Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Aplayer音乐播放器"><a href="#Aplayer音乐播放器" class="headerlink" title="Aplayer音乐播放器"></a>Aplayer音乐播放器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting <span class="string">&quot;19723756&quot;</span> <span class="string">&quot;netease&quot;</span> <span class="string">&quot;playlist&quot;</span> %&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>如果没有显示歌单,请刷新一下.</p>    <div id="aplayer-pMrYCott" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="19723756" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Aplayer音乐播放器&quot;&gt;&lt;a href=&quot;#Aplayer音乐播放器&quot; class=&quot;headerlink&quot; title=&quot;Aplayer音乐播放器&quot;&gt;&lt;/a&gt;Aplayer音乐播放器&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% meting &lt;span class=&quot;string&quot;&gt;&amp;quot;19723756&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;netease&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;playlist&amp;quot;&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Aplayer" scheme="https://drfengling.github.io/tags/Aplayer/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(五)</title>
    <link href="https://drfengling.github.io/qm/a8d0420a.html"/>
    <id>https://drfengling.github.io/qm/a8d0420a.html</id>
    <published>2022-04-15T07:46:26.000Z</published>
    <updated>2022-04-19T06:39:31.441Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h2><h5 id="插入B站视频"><a href="#插入B站视频" class="headerlink" title="插入B站视频"></a>插入B站视频</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;</span>&gt;&lt;iframe </span><br><span class="line">src=<span class="string">&quot;//player.bilibili.com/player.html?aid=39807850&amp;cid=69927212&amp;page=1&quot;</span> scrolling=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> </span><br><span class="line">frameborder=<span class="string">&quot;no&quot;</span> framespacing=<span class="string">&quot;0&quot;</span> allowfullscreen=<span class="string">&quot;true&quot;</span> style=<span class="string">&quot;position: absolute; width: 100%; </span></span><br><span class="line"><span class="string">height: 100%; left: 0; top: 0;&quot;</span>&gt; &lt;/iframe&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=39807850&cid=69927212&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;插入视频&quot;&gt;&lt;a href=&quot;#插入视频&quot; class=&quot;headerlink&quot; title=&quot;插入视频&quot;&gt;&lt;/a&gt;插入视频&lt;/h2&gt;&lt;h5 id=&quot;插入B站视频&quot;&gt;&lt;a href=&quot;#插入B站视频&quot; class=&quot;headerlink&quot; title=&quot;插入B站视频&quot;&gt;&lt;/a&gt;插入B站视频&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div style=&lt;span class=&quot;string&quot;&gt;&amp;quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;iframe &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src=&lt;span class=&quot;string&quot;&gt;&amp;quot;//player.bilibili.com/player.html?aid=39807850&amp;amp;cid=69927212&amp;amp;page=1&amp;quot;&lt;/span&gt; scrolling=&lt;span class=&quot;string&quot;&gt;&amp;quot;no&amp;quot;&lt;/span&gt; border=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;frameborder=&lt;span class=&quot;string&quot;&gt;&amp;quot;no&amp;quot;&lt;/span&gt; framespacing=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; allowfullscreen=&lt;span class=&quot;string&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; style=&lt;span class=&quot;string&quot;&gt;&amp;quot;position: absolute; width: 100%; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;height: 100%; left: 0; top: 0;&amp;quot;&lt;/span&gt;&amp;gt; &amp;lt;/iframe&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="视频" scheme="https://drfengling.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(四)</title>
    <link href="https://drfengling.github.io/qm/ae7b1577.html"/>
    <id>https://drfengling.github.io/qm/ae7b1577.html</id>
    <published>2022-04-15T07:39:32.000Z</published>
    <updated>2022-04-19T06:39:23.184Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h2><p>需要使用 iframe 标签</p><p>在实际运用中，可以使用网易云音乐，搜索想要的歌曲，点击歌曲名字进入播放器页面，点击生成外链播放器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> width=100% height=86 src=<span class="string">&quot;//music.163.com/outchain/player?type=3&amp;id=2501767770&amp;auto=1&amp;height=66&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><span id="more"></span><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=100% height=86 src="//music.163.com/outchain/player?type=3&id=2501767770&auto=1&height=66"></iframe>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;插入音乐&quot;&gt;&lt;a href=&quot;#插入音乐&quot; class=&quot;headerlink&quot; title=&quot;插入音乐&quot;&gt;&lt;/a&gt;插入音乐&lt;/h2&gt;&lt;p&gt;需要使用 iframe 标签&lt;/p&gt;
&lt;p&gt;在实际运用中，可以使用网易云音乐，搜索想要的歌曲，点击歌曲名字进入播放器页面，点击生成外链播放器。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;iframe frameborder=&lt;span class=&quot;string&quot;&gt;&amp;quot;no&amp;quot;&lt;/span&gt; border=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; marginwidth=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; marginheight=&lt;span class=&quot;string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; width=100% height=86 src=&lt;span class=&quot;string&quot;&gt;&amp;quot;//music.163.com/outchain/player?type=3&amp;amp;id=2501767770&amp;amp;auto=1&amp;amp;height=66&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="音乐" scheme="https://drfengling.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(三)</title>
    <link href="https://drfengling.github.io/qm/5438fa78.html"/>
    <id>https://drfengling.github.io/qm/5438fa78.html</id>
    <published>2022-04-15T06:41:37.000Z</published>
    <updated>2022-04-19T06:39:11.589Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="创建歌单页面"><a href="#创建歌单页面" class="headerlink" title="创建歌单页面"></a>创建歌单页面</h2><p>由于我想在单独的页面加入歌单，所以额外创了个页面，也可以直接在文章中插入，原理都是一样的。</p><span id="more"></span><p>新建页面，命名为playlist：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page playlist</span><br></pre></td></tr></table></figure><p>这时候在 /Hexo/source 文件夹下会生成一个playlist文件夹，打开里面的index.md，修改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 歌单</span><br><span class="line"><span class="built_in">date</span>: 2019-02-21 16:14:00</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;playlist&quot;</span></span><br></pre></td></tr></table></figure><p>打开主题的 _config.yml文件，在menu下新建一个名为playlist的类（注意这里使用的图标是图标库中的图标，网址为 <a href="http://www.fontawesome.com.cn/faicons/">http://www.fontawesome.com.cn/faicons/</a> 。可以选择自己喜欢的图标，我这里选择的是music）。完成后如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  playlist: /playlist/ || music</span><br><span class="line">  about: /about/ || user</span><br></pre></td></tr></table></figure><p>打开/Hexo/themes/hexo-theme-next/languages/zh-Hans.yml，添加对应的中文翻译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  playlist: 歌单</span><br></pre></td></tr></table></figure><p>这样歌单就创建完成啦~</p><p>使用 hexo-tag-aplayer 插件<br>hexo-tag-aplayer 是Aplayer在hexo上的插件，这里的配置参考的是官方文档 ，第一步安装 hexo-tag-aplayer：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>最新版的 hexo-tag-aplayer 已经支持了MetingJS的使用，可以直接解析网络平台的歌曲（简直是神器），首先要在站点配置文件中开启meting模式，添加以下代码在配置文件的最后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>复制歌单的链接，然后复制歌单的id，例如 <a href="https://music.163.com/playlist?id=19723756">https://music.163.com/playlist?id=19723756</a> ，这个歌单的id就是19723756，公司名可以是tencent、netease或是其他公司，下面给出一个例子，打开 /Hexo/source/playlist/index.md文件，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting <span class="string">&quot;523845661&quot;</span> <span class="string">&quot;netease&quot;</span> <span class="string">&quot;playlist&quot;</span> <span class="string">&quot;theme:#FF4081&quot;</span> <span class="string">&quot;mode:circulation&quot;</span> <span class="string">&quot;mutex:true&quot;</span> <span class="string">&quot;listmaxheight:340px&quot;</span> <span class="string">&quot;preload:auto&quot;</span> %&#125;</span><br></pre></td></tr></table></figure><p>效果还是很不错的：<br><img src="/qm/5438fa78/1650007670.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;创建歌单页面&quot;&gt;&lt;a href=&quot;#创建歌单页面&quot; class=&quot;headerlink&quot; title=&quot;创建歌单页面&quot;&gt;&lt;/a&gt;创建歌单页面&lt;/h2&gt;&lt;p&gt;由于我想在单独的页面加入歌单，所以额外创了个页面，也可以直接在文章中插入，原理都是一样的。&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="音乐" scheme="https://drfengling.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(二)</title>
    <link href="https://drfengling.github.io/qm/4b6f21d9.html"/>
    <id>https://drfengling.github.io/qm/4b6f21d9.html</id>
    <published>2022-04-15T01:18:10.000Z</published>
    <updated>2022-04-19T06:39:43.487Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="新建文章与页面"><a href="#新建文章与页面" class="headerlink" title="新建文章与页面"></a>新建文章与页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;title&quot;</span>  <span class="comment"># 生成新文章: \source\_posts\title.md</span></span><br><span class="line">hexo new page <span class="string">&quot;title&quot;</span>  <span class="comment"># 生成新的页面, 后面可在主题配置文件中配置页面</span></span><br></pre></td></tr></table></figure><p>生成文章或页面的模板放在博客文件夹根目录下的 scaffolds/ 文件夹里面, 文章对应的是 post.md , 页面对应的是page.md, 草稿的是draft.md</p><span id="more"></span><h2 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h2><p>打开新建的文章\source_posts\postName.md, 其中postName是hexo new “title”中的title</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 搭建个人博客(二)  <span class="comment"># 文章页面上的显示名称, 可以任意修改, 不会出现在URL中</span></span><br><span class="line">categories: <span class="comment"># 文章分类目录, 多个分类使用[a,b,c]这种格式</span></span><br><span class="line">  - 博客日记</span><br><span class="line">tags:  <span class="comment"># 文章标签</span></span><br><span class="line">  - Hexo</span><br><span class="line">  - GitHub</span><br><span class="line">  - Nodejs</span><br><span class="line">abbrlink: 4b6f21d9 <span class="comment">#短链接</span></span><br><span class="line"><span class="built_in">date</span>: 2022-04-15 09:18:10 <span class="comment"># 文章生成时间, 一般不改</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里开始使用markdown格式输入你的正文. </span></span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt; </span><br><span class="line"><span class="comment">#more标签以下的内容要点击“继续阅读”才能看见</span></span><br></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><h3 id="插入图片有三种方式"><a href="#插入图片有三种方式" class="headerlink" title="插入图片有三种方式"></a>插入图片有三种方式</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p>在博客根目录的 source 文件夹下新建一个 img 文件夹专门存放图片, 在博文中引用的图片路径为 /img/图片名.后缀</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](图片路径)</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><h5 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h5><p>在hexo中使用文章资源文件夹需要在config.yaml文件中更改一下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</p><p>插件hexo-renderer-marked解决了这个问题。可以只用npm install hexo-renderer-marked命令直接安装，之后在config.yaml中更改配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: <span class="literal">true</span></span><br><span class="line">marked:</span><br><span class="line">  prependRoot: <span class="literal">true</span></span><br><span class="line">  postAsset: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>图片放入文章资源夹 之后就可以在使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure><p><img src="/qm/4b6f21d9/image.jpg">的方式愉快的插入图片了。</p><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](使用网络图片:http://www.dmoe.cc/random.php)</span><br></pre></td></tr></table></figure><p><img src="http://www.dmoe.cc/random.php"></p><h2 id="简单的命令"><a href="#简单的命令" class="headerlink" title="简单的命令"></a>简单的命令</h2><h4 id="总结一下简单的使用命令"><a href="#总结一下简单的使用命令" class="headerlink" title="总结一下简单的使用命令"></a>总结一下简单的使用命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder] <span class="comment"># 初始化一个网站. 如果没有设置 folder , Hexo 默认在目前的文件夹建立网站</span></span><br><span class="line">hexo new [layout] &lt;title&gt; <span class="comment"># 新建一篇文章. 如果没有设置 layout 的话, 默认使用 _config.yml 中的 default_layout 参数代替. 如果标题包含空格的话, 请使用引号括起来</span></span><br><span class="line">hexo version <span class="comment"># 查看版本</span></span><br><span class="line">hexo clean <span class="comment"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span><br><span class="line">hexo g <span class="comment"># 等于hexo generate # 生成静态文件</span></span><br><span class="line">hexo s <span class="comment"># 等于hexo server # 本地预览</span></span><br><span class="line">hexo d <span class="comment"># 等于hexo deploy # 部署, 可与hexo g合并为 hexo d -g</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;新建文章与页面&quot;&gt;&lt;a href=&quot;#新建文章与页面&quot; class=&quot;headerlink&quot; title=&quot;新建文章与页面&quot;&gt;&lt;/a&gt;新建文章与页面&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new &lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 生成新文章: \source\_posts\title.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 生成新的页面, 后面可在主题配置文件中配置页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成文章或页面的模板放在博客文件夹根目录下的 scaffolds/ 文件夹里面, 文章对应的是 post.md , 页面对应的是page.md, 草稿的是draft.md&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Hexo" scheme="https://drfengling.github.io/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://drfengling.github.io/tags/GitHub/"/>
    
    <category term="Nodejs" scheme="https://drfengling.github.io/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客(一)</title>
    <link href="https://drfengling.github.io/qm/387162d6.html"/>
    <id>https://drfengling.github.io/qm/387162d6.html</id>
    <published>2022-04-13T00:48:09.000Z</published>
    <updated>2022-04-19T06:39:53.617Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一-初识Hexo"><a href="#一-初识Hexo" class="headerlink" title="一.初识Hexo;"></a>一.初识Hexo;</h3><p>快速、简洁且高效的博客框架，官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a>是这么介绍的，嗯，有道理，那么我就不赘述了，想要更透彻了解的可自行查阅。</p><p>但是要知道它是个博客框架，有很多好看的主题<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>可以应用在自己的博客上，这篇文章要讲述如何用hexo写博客并部署到github上就好了。</p><span id="more"></span><h3 id="二-安装前提"><a href="#二-安装前提" class="headerlink" title="二.安装前提;"></a>二.安装前提;</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><p><a href="https://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br><a href="http://git-scm.com/">Git</a><br>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 安装 Hexo 步骤。</p><h3 id="三-安装Hexo"><a href="#三-安装Hexo" class="headerlink" title="三.安装Hexo;"></a>三.安装Hexo;</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>进阶安装和使用<br>对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo</span><br></pre></td></tr></table></figure><h3 id="四-搭建博客"><a href="#四-搭建博客" class="headerlink" title="四.搭建博客;"></a>四.搭建博客;</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>这里我在J:\WEIXIN\Blog下新建了文件夹博客日记作为演示<br>1.打开cmd命令行或Windows Power Shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有 (C) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">尝试新的跨平台 PowerShell https://aka.ms/pscore6</span><br><span class="line"></span><br><span class="line">PS C:\Users\Administrator&gt; J:</span><br></pre></td></tr></table></figure><p>2.切换到J盘文件夹目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS J:\&gt; <span class="built_in">cd</span> J:\WEIXIN\Blog\博客日记</span><br></pre></td></tr></table></figure><p>3.初始化hexo博客文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo init</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">[32mINFO [39m Install dependencies</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br><span class="line">_config.yml</span><br></pre></td></tr></table></figure><p>网站的 配置 信息，您可以在此配置大部分的参数。</p><p>package.json<br>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hexo-site&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;private&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;hexo&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hexo&quot;</span>: <span class="string">&quot;^3.8.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-archive&quot;</span>: <span class="string">&quot;^0.1.5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-category&quot;</span>: <span class="string">&quot;^0.1.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-index&quot;</span>: <span class="string">&quot;^0.2.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-generator-tag&quot;</span>: <span class="string">&quot;^0.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-ejs&quot;</span>: <span class="string">&quot;^0.3.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-stylus&quot;</span>: <span class="string">&quot;^0.3.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-renderer-marked&quot;</span>: <span class="string">&quot;^0.3.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hexo-server&quot;</span>: <span class="string">&quot;^0.3.3&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scaffolds<br>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><p>source<br>资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><p>themes<br>主题 文件夹。Hexo 会根据主题来生成静态页面。<br>4.启动Hexo $ hexo s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>5.浏览器输入：<a href="http://localhost:4000/">http://localhost:4000</a>，可查看到默认生成了一篇博文：<br><img src="/qm/387162d6/HexoIndex.jpg"></p><p>6.新建一篇博文<br>ctrl+c断开刚刚的链接，新建一篇博文：hexo n “发布第二篇个人博客”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo n <span class="string">&quot;发布第二篇个人博客&quot;</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Created: J:\WEIXIN\Blog\博客1\<span class="built_in">source</span>\_posts\发布第二篇个人博客.md</span><br><span class="line">PS J:\WEIXIN\Blog\博客日记&gt;</span><br></pre></td></tr></table></figure><p>5、接下来就是更改博文内容，可以选择用命令行，也可用开发工具，我直接使用记事本打开该文件了，找到相应的位置，做修改即可<br><img src="/qm/387162d6/HexobowenCreate.jpg"><br>6、同样在博客日记文件下： 清理：hexo clean 生成：hexo g 启动：hexo s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo cl</span><br><span class="line">..</span><br><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo g</span><br><span class="line">..</span><br><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo s</span><br></pre></td></tr></table></figure><p><img src="/qm/387162d6/hexobowen2.jpg"><br>完成!</p><h3 id="五-部署到Github上"><a href="#五-部署到Github上" class="headerlink" title="五.部署到Github上;"></a>五.部署到Github上;</h3><p>1、登录github：<a href="https://github.com/">https://github.com</a>，没账号的新建一个，新创建一个仓库New repository，仓库名必须为：昵称.github.io:，输入描述，创建：<br><img src="/qm/387162d6/1.jpg"><br><img src="/qm/387162d6/2.jpg"><br>2、命令行下，ctrl+c，退出命令，仍然在博客日记目录下，安装git部署插件：npm install hexo-deployer-git –save</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>3、更改博客日记文件夹下，_config.yml的配置，我直接用记事本了，用命令行修改也可以：</p><p>repo为第一步创建的git仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/Drfengling/Drfengling.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>4.回到命令行部署到远端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo d</span><br></pre></td></tr></table></figure><p>中间会让输入github密码，输入即可，后续部署完成，即可访问你的远端地址：<br><a href="https://drfengling.github.io/">https://Drfengling.github.io</a><br>###五.Hexo主题的使用；<br>1、选主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>，有很多主题可供选择，也可使用网友推荐的自己喜欢的主题，有相应的预览、github地址：</p><p>我这里使用的是： diaspora： <a href="https://github.com/Fechin/hexo-theme-diaspora">https://github.com/Fechin/hexo-theme-diaspora</a></p><p>有相应的安装方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; git <span class="built_in">clone</span> https://github.com/Fechin/hexo-theme-diaspora.git themes/diaspora</span><br></pre></td></tr></table></figure><p>修改Hexo配置文件 _config.yml 主题项设置为diaspora</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">theme: diaspora</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>3、清理、启动：</p><p>清理：hexo clean 生成：hexo g 启动：hexo s</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo cl</span><br><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo g</span><br><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo s</span><br></pre></td></tr></table></figure><p>在本地刷新预览<a href="http://localhost:4000/">http://localhost:4000</a>之后，看到主题效果，可根据自己需要做相应修改即可。</p><p>4、推至远端：</p><p>ctrl+c退出上一步命令，然后推至远端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS J:\WEIXIN\Blog\博客日记&gt; hexo d</span><br></pre></td></tr></table></figure><p>刷新查看：<a href="https://drfengling.github.io/">https://Drfengling.github.io</a><br>以上就是搭建个人博客的全过程了，也可以购买自己的域名，放置自己的域名下</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一-初识Hexo&quot;&gt;&lt;a href=&quot;#一-初识Hexo&quot; class=&quot;headerlink&quot; title=&quot;一.初识Hexo;&quot;&gt;&lt;/a&gt;一.初识Hexo;&lt;/h3&gt;&lt;p&gt;快速、简洁且高效的博客框架，官网：&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;https://hexo.io/zh-cn/&lt;/a&gt;是这么介绍的，嗯，有道理，那么我就不赘述了，想要更透彻了解的可自行查阅。&lt;/p&gt;
&lt;p&gt;但是要知道它是个博客框架，有很多好看的主题&lt;a href=&quot;https://hexo.io/themes/&quot;&gt;https://hexo.io/themes/&lt;/a&gt;可以应用在自己的博客上，这篇文章要讲述如何用hexo写博客并部署到github上就好了。&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Hexo" scheme="https://drfengling.github.io/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://drfengling.github.io/tags/GitHub/"/>
    
    <category term="Nodejs" scheme="https://drfengling.github.io/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://drfengling.github.io/qm/4a17b156.html"/>
    <id>https://drfengling.github.io/qm/4a17b156.html</id>
    <published>2022-04-12T03:04:16.405Z</published>
    <updated>2022-04-14T09:07:21.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Hexo" scheme="https://drfengling.github.io/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://drfengling.github.io/tags/GitHub/"/>
    
    <category term="Nodejs" scheme="https://drfengling.github.io/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>为什么要写博客?</title>
    <link href="https://drfengling.github.io/qm/d2b740ea.html"/>
    <id>https://drfengling.github.io/qm/d2b740ea.html</id>
    <published>2022-04-12T02:40:14.000Z</published>
    <updated>2022-04-19T06:40:02.609Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一个选择"><a href="#一个选择" class="headerlink" title="一个选择"></a>一个选择</h3><p>我知道现在可能说这话有点不合时宜，毕竟博客时代都已经过去了，再号召大家用过就好像时的东西是不是有点逆流而上？</p><p>我曾经也问过自己这个问题，但是我觉得，博客时代过去跟我们要开博客是没有多大关系的，就好像你的读书时代已经过去你就不再读书一样。</p><p>判断一件事情值不值得去做有一个方法：在一张白纸的左边写不值得做的原因，然后在右边写值得做的原因，写完一比较，一权衡，自然能够得出结果。</p><span id="more"></span><p>大家都成年人了，你会觉得这样思考分析总结的过程才是正确的思考的方法吧？</p><p>所以，我在这里列出要写（独立）博客的原因，供大家去选择，然后填在你白纸的右边。</p><p>注意，我不是给你一个建议，而是提供一个选择，这个选择蕴藏着我也不知道的可能。</p><h3 id="博客的内容"><a href="#博客的内容" class="headerlink" title="博客的内容"></a>博客的内容</h3><p>写博客不难，你可以当作是生活的记录，但是这样的记录没有任何的意义。写要对得住写本身，写出来的东西应该是思考的结果。我认为，如果你要开一个博客，博客的内容应该是这样的：</p><ol><li>不是生活杂记、不是流水账、不是牢骚、不是抱怨、不是心情琐记……；</li><li>有目的地写，要务实，追求质量；</li><li>承认真实的自己，不要吹嘘，不要装逼，无需讨好读者；</li><li>记录自己学习、思考、总结的过程；</li><li>分享你的故事、所得、感想、经验；<br>值得写的原因<br>以下是一个清单，可以根据自己的情况匹配，然后选择。</li></ol><h3 id="重新认识自己"><a href="#重新认识自己" class="headerlink" title="重新认识自己"></a>重新认识自己</h3><p>是不是很久没有跟自己对话了？</p><p>你可以尝试从回答一些问题开始，将你过去要回避的问题写下来，例如就可以从这个九个问题开始：</p><p>1、请你介绍一下你自己，你是个什么样的人？</p><p>2、你有什么理想吗？这个理想是怎么形成的？</p><p>3、你理想的伴侣关系是什么样的？你自己在这个伴侣关系中扮演什么样的角色？要承担什么样的责任？</p><p>4、你理想的事业是什么，你正在做的工作符合你的事业理想吗？这份工作对你的意义是什么？</p><p>5、你对亲子关系怎么看？对你来说，什么是一个理想的父亲（母亲），你期望自己成为这样一个理想父亲（母亲）吗？</p><p>6、你对钱怎么看，你认为赚到多少钱是足够的？如果你明天一早醒来，已经有足够的钱，你将会如何继续安排自己的生活？</p><p>7、你的择友标准是什么？什么样的人你会愿意交往，什么样的人你会拒绝和他交往？</p><p>8、你对死亡怎么看？你希望自己活到多少岁，你准备怎么度过从现在到死亡的这段时间？如果你要立遗嘱，这份遗嘱会怎么写？</p><p>以上的这八个问题摘自《很少人能顺畅回答这8个问题——心理治疗刚开始医生常常会先问你的 》by 李孟潮。</p><p>这些问题的答案你可以选择不发，但是我强烈地建议写下来，只有在写的时候你才可以慎重地思考这些问题，而不会回避跳过或者留下空白，这是接受自己的第一步。</p><h3 id="提供持续学习的动力"><a href="#提供持续学习的动力" class="headerlink" title="提供持续学习的动力"></a>提供持续学习的动力</h3><p>例如，我为自己设限每天写一千字，信息的不断输出给我带来恐惧，我害怕有一天我写无可写，于是我不停地阅读，通过个人的知识管理促使自己不断学习，提高核心竞争力。</p><h3 id="积累更多的知识"><a href="#积累更多的知识" class="headerlink" title="积累更多的知识"></a>积累更多的知识</h3><p>写并不是单纯的写。</p><p>例如你写着写着，你突然忘记了一个概念，于是上网找，找回来这个概念的时候，你重温这个概念，可能还会顺便看了一下这个概念的其他东西。</p><p>例如你需要获取第一手的资料，寻找信息来源本身就是一个知识积累的过程，同时，你慢慢就学会了鉴别知识：什么是没有用的心灵鸡汤，什么是不值得关注的吐槽名人，还有，在这个过程中，你还养成你的心智。</p><h3 id="提高将事情讲清楚的能力"><a href="#提高将事情讲清楚的能力" class="headerlink" title="提高将事情讲清楚的能力"></a>提高将事情讲清楚的能力</h3><p>很多东西你以为懂了，但当你在写下来的时候，你就觉得无从下手了。</p><p>如果一件事情你不能讲清楚，十有八九你还没有完全理解。</p><p>将事情写下来，慢慢就可以提高你的逻辑思维能力，分析能力，写会迫使你在你脑中搭建一个有条理的框架。例如我写这篇文章一样，我就将值得写博客的原因一点一点地罗列出来，事情就更加清晰，你也可以更好的思考问题。</p><h3 id="分享带来的连锁反应"><a href="#分享带来的连锁反应" class="headerlink" title="分享带来的连锁反应"></a>分享带来的连锁反应</h3><p>“通过分享，你获得了直接而快速的回报，你最终或许会发现你已将版权和“保留所有权利”抛诸脑后。新的经济学准则是：参与你作品的人越多，回报越高。在分享主义里，如果你愿意你可以保留所有权，但是我乐于分享。” by 毛向辉 《分享主义：一场思维革命》</p><p>互联网精神其中最重要的就是分享主义，基于分享主义，你可以享受到社会化及互联网给你带来的种种便利和好处，你分享了一个知识，你就成为了互联网中的一个点，这个点的大小由你自己来决定，互联网的大潮会将你的这个点推送到它所能触及的每个角落，让需要的人得到，同时，你的这个点也会继续扩大，连接到整个网络，这个点有可能连接成一张网，而你就是这张网的中心。</p><h3 id="帮你找到志同道合的人"><a href="#帮你找到志同道合的人" class="headerlink" title="帮你找到志同道合的人"></a>帮你找到志同道合的人</h3><p>在微博，在朋友圈，你可能找不到跟你志同道合的人，而在博客，你可以通过看他的几篇文章就迅速地理解认同这个人，即使你没有见过这个人，但你也可以通过这种关联来相互学习。</p><p>如果你在一个领域有相当的了解，你将这些内容发在网络上，网络上跟你志趣相投的人也会被你吸引过来，根据吸引力法则，你是怎样的人你就被怎么样的人吸引，这就是博客所能赋予你的魅力。</p><p>即使博客没有被他人关注，我们依然可以找到同好，你可以自己将博文转载到其他站点，人们会通过搜索引擎找到你，有邮件、微博等工具，我们不乏与他人交流的途径。by Gabriel Weinberg《Why I blog》</p><h3 id="记录成长"><a href="#记录成长" class="headerlink" title="记录成长"></a>记录成长</h3><p>隔一段时间，你再回头看你写的博客，你会发现自己正在通过这样的方式在不断的成长，这种成长在自己眼里是一种财富，在别人眼里是一张地图，你得到了收获，不断修正自己的错误，别人得到了指引，避免走弯路。</p><p>更多的情况是当你回望自己的时候你会发现自己是一个傻逼，so what，that is what I am！</p><h3 id="培养持续做一件事情的能力"><a href="#培养持续做一件事情的能力" class="headerlink" title="培养持续做一件事情的能力"></a>培养持续做一件事情的能力</h3><p>开始是坚持，后来是习惯，接着喜欢。以后当有人对你说，「你写那么多有用的东西，你真的很厉害啊！」你可以笑而不语，也可以大声说道：「你妹，你不知道我开始的时候多么痛苦！」</p><p>让你长久地去跑步，你可能做不到；让你每个月看一本书，你也可能做不到；但让你持续地写一个博客，你可以做得到。</p><p>你不相信？你不试试你怎么知道？</p><p>默默地持续做一件事是一种难得的能力，也是一种难得的品质。</p><h3 id="讨论反思"><a href="#讨论反思" class="headerlink" title="讨论反思"></a>讨论反思</h3><p>每人都会有思维的盲点，就好像这篇文章一样，可能你觉得我可能说得不对，你可以反驳我，我欢迎这种讨论，因为讨论的过程中会产生各种的思维的碰撞，这种碰撞会让你反思，也会激发出你新的灵感，这种讨论反思给自己的带来巨大的受益。</p><p>互联网给你的反馈就是让你承受更多，接受更多，成为一个更好的人。</p><p>###搜寻到你意想不到东西<br>世界不止是你的家，你的公司，你的朋友圈，你应该去发现一个更大的世界，通过写博客，你会知道世界上还有很多人像你一样在写博客，这些人和知识正在世界的某个角落在等着你。</p><p>例如，在写这篇文章的过程中，我才知道了Gabriel Weinberg，我才要将阳志平的博客重读一遍。写的过程会让你有很多新的发现，这些新的发现都值得你去再写下来，总结分享出去。</p><h3 id="一个人在做一件属于自己的事"><a href="#一个人在做一件属于自己的事" class="headerlink" title="一个人在做一件属于自己的事"></a>一个人在做一件属于自己的事</h3><p>很多你认为自己很牛逼的事情都是自己一个人做出来。</p><p>别人在刷微博，你在看书，别人在看穿越剧，你在学英文，别人在去唱K，你在写个人总结。吃饭也要找同伴，出游要找同伴，看电影要找同伴，你上一次一个人在做一件属于自己的事是在什么时候？</p><p>如果你想要清晰地思考，就必须远离人群。但是走得越远，你的处境就会越困难，收到的阻力也会越大。因为你没有迎合社会习俗，而是一步步地与它背道而驰。如果自己就是潮水的一部分 ，怎么能看见潮流的方向呢？你只能永远保持质疑，问自己，什么话是我不能说的？为什么？——Paul Graham《不能说的话》</p><h3 id="互联网的身份识别："><a href="#互联网的身份识别：" class="headerlink" title="互联网的身份识别："></a>互联网的身份识别：</h3><p>一个长期的价值博客是一份很好的简历。这里的“简历”并非是狭义上的求职简历，毕竟现在还没有到价值博客的时代，很多人写博客都是到处转载或者干脆碎碎念，正因此面试官未必拿个人博客当成了解一个人的更可靠窗口。</p><p>这里的“简历”是指一个让别人了解自己的窗口，虽然我们未必做得到像罗永浩、Keso这样的博客，个人的影响力已经足以支撑出一份事业（牛博和5gme），但至少你会因此而结识更多的人，你的博客价值越高，你结识的人就越牛，跟牛人交流又会让你的眼界得到极大的开阔，打开一扇又一扇你原本不知道的门，于是你就变得更牛… 这是一个良性循环。by 刘未鹏</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>你可能想不到在白纸的左边（不值得写博客的原因）写什么了，想不到写个「博客时代已经过去」或者「我没有时间」也可以，但与此同时，你也可以用那些时间去思考一下「怎么做到长期写一个价值博客」。</p><!-- more -->]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一个选择&quot;&gt;&lt;a href=&quot;#一个选择&quot; class=&quot;headerlink&quot; title=&quot;一个选择&quot;&gt;&lt;/a&gt;一个选择&lt;/h3&gt;&lt;p&gt;我知道现在可能说这话有点不合时宜，毕竟博客时代都已经过去了，再号召大家用过就好像时的东西是不是有点逆流而上？&lt;/p&gt;
&lt;p&gt;我曾经也问过自己这个问题，但是我觉得，博客时代过去跟我们要开博客是没有多大关系的，就好像你的读书时代已经过去你就不再读书一样。&lt;/p&gt;
&lt;p&gt;判断一件事情值不值得去做有一个方法：在一张白纸的左边写不值得做的原因，然后在右边写值得做的原因，写完一比较，一权衡，自然能够得出结果。&lt;/p&gt;</summary>
    
    
    
    <category term="博客日记" scheme="https://drfengling.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="日记" scheme="https://drfengling.github.io/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
</feed>
